<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>